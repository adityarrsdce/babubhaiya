{
  "PCC-ME 306 Dynamics of Machinery": {
    "type": "text",
    "text": "L:3\nT:0\nP:3\nCREDIT:4.5\n\nObjectives:\n- Equip students with fundamental knowledge of dynamics of machines: dynamic force balance, transmissibility, isolation, vibrations.\n- Apply analytical and graphical methods for balancing reciprocating masses.\n- Understand vibrations and their significance in engineering design.\n- Study dynamic balancing, flywheel analysis, gyroscopic forces, and moments.\n\nModule 1:\n- Force analysis of mechanism: dynamics of plane motion of a rigid body.\n- Dynamically equivalent two-mass system, correction torque.\n- Forces in mechanisms and machines.\n\nModule 2:\n- Turning moment diagram.\n- Fluctuations of crankshaft speed and energy in direct-acting engine mechanisms.\n- Flywheels.\n\nModule 3:\n- Cams: classification of cams and followers, follower types.\n- Cam profile generation (graphical method).\n- Tangent cam with roller follower.\n- Circular arc cam with flat follower.\n\nModule 4:\n- Gyroscopic motion: principle, gyroscopic couple/reaction couple.\n- Gyroscopic effects on ships, airplanes, two- and four-wheeled vehicles.\n- Gyro stabilizers.\n\nModule 5:\n- Inertia of reciprocating masses: unbalanced primary/secondary forces and couples.\n- Balancing of primary and secondary forces.\n- Partial balancing of locomotives.\n- Balancing of multi-cylinder in-line and radial engines.\n- Direct and reverse cranks method for balancing radial engines.\n\nModule 6:\n- Mechanical vibrations: concepts, degrees of freedom.\n- Types of damping; viscous damping.\n- Natural free, damped free, and damped forced vibrations (single DOF spring-mass system).\n- Reciprocating and rotating unbalance.\n- Vibration isolation and transmissibility.\n- Whirling of shaft.\n- Two DOF systems: torsional vibrations of single/two rotor systems.\n- Transverse vibration of simply supported beam.\n- Energy method, Rayleigh method, Dunkerley method.\n\nCourse Outcomes:\n- Analyze stabilization of sea, air, and land vehicles.\n- Compute frictional losses, torque transmission.\n- Perform dynamic force analysis of slider-crank and flywheel design.\n- Determine natural frequencies of continuous systems.\n- Balance reciprocating and rotary masses.\n\nTextbooks/References:\n- S.S. Rattan, Theory of Machines, McGraw Hill.\n- Ashok G. Ambedkar, Mechanism and Machine Theory, PHI.\n- J.S. Rao & R.V. Dukkipati, Mechanism and Machine Theory, New Age.\n- Shigley, Theory of Machines, MGH.\n- Thomas Bevan, Theory of Machines, CBS.\n- Khurmi, Theory of Machines, S. Chand.\n\nLaboratory (minimum 10 experiments):\n- Links, pairs, chains, and mechanisms.\n- Four-bar mechanism inversion.\n- Velocity diagrams (slider-crank).\n- Belt drives and friction.\n- Cam and follower arrangements; displacement vs. rotation.\n- Gear types and gear trains.\n- Governors (Watt, Porter, Proell, Hartnell): performance curves, stability, sensitivity.\n- Gyroscopic effects and couple measurement.\n- Balancing of rotating parts.\n- Dynamically equivalent systems.\n- Moment of inertia of connecting rod (compound pendulum, trifilar suspension).\n- Dynamometer types.\n- Critical speed of shaft (whirling) experimental verification."
  },
  "PCC-ME 307 Manufacturing Technology": {
    "type": "text",
    "text": "L:3\nT:0\nP:3\nCREDIT:4.5\n\nObjectives:\n- Provide knowledge on machines and related tools for manufacturing components.\n- Understand process–system relationships in manufacturing.\n- Identify techniques for quality assurance and process optimization.\n\nModule 1:\n- Tooling for conventional and non-conventional machining: mould and die design, press tools, cutting tools.\n- Holding tools: jigs and fixtures — principles, applications, design.\n- Press tool configuration, die and punch design.\n- Forging die design principles.\n\nModule 2:\n- Metrology: dimensions, forms, surface measurements.\n- Limits, fits, tolerances; linear and angular measurements.\n- Comparators, gauge design, interferometry.\n- Tool wear and part quality measurement; surface integrity.\n- Alignment and testing methods.\n- Tolerance analysis in manufacturing/assembly.\n- Process metrology for micro-scale machining.\n- Inspection and workpiece quality.\n\nModule 3:\n- Assembly practices: manufacturing and assembly.\n- Process planning.\n- Selective assembly.\n- Material handling and devices.\n\nModule 4:\n- Unconventional machining:\n  - Abrasive Jet Machining, Water Jet Machining, Abrasive Water Jet Machining, Ultrasonic Machining — principles, parameters.\n  - Electrical Discharge Machining: principle, parameters, MRR, surface finish, tool wear, dielectric, circuits, wire EDM.\n  - Electrochemical Machining (ECM): etchant & maskant, parameters, MRR, surface finish.\n  - Laser Beam Machining (LBM), Plasma Arc Machining (PAM), Electron Beam Machining.\n\nCourse Outcomes:\n- Understand tooling for manufacturing.\n- Assess dimensional accuracy, tolerances, and component assembly.\n- Apply optimization methods in manufacturing.\n\nTextbooks:\n- Kalpakjian & Schmid, Manufacturing Processes for Engineering Materials, 5th ed., Pearson India, 2014.\n- Taha H.A., Operations Research, 6th ed., Prentice Hall India, 2003.\n- Shenoy G.V. & Shrivastava U.K., Operations Research for Management, Wiley Eastern, 1994.\n\nLaboratory:\n- Angle measurement (Sine Center, Sine Bar, Bevel Protractor).\n- Alignment measurement (Autocollimator, Roller Set).\n- Cutting tool force measurement (Lathe Tool Dynamometer, Drill Tool Dynamometer).\n- Screw thread parameters (two-/three-wire method).\n- Surface roughness (Tally Surf, Mechanical Comparator).\n- Gear tooth profile (Gear Tooth Vernier, Gear Tooth Micrometer).\n- Micrometer calibration (slip gauges).\n- Optical flat measurements."
  },
  "PCC-ME 308 Design of Machine Elements": {
  "type": "text",
  "text": "L:3\nT:1\nP:2\nCREDIT:5\n\nObjectives:\n- Provide an introduction to the design of machine elements commonly encountered in mechanical engineering.\n- Apply mechanics of materials–based failure criteria to ensure safety-critical design.\n- Understand empirical design principles and safety considerations.\n- Gain familiarity with relevant codes, standards, and design guidelines.\n- Appreciate parameter optimization, design iteration, and system-level design relationships.\n\nModule 1:\n- Steps in design process.\n- Design factors, practical considerations, and material selection.\n- Strength of mechanical elements.\n- Loads: impact, shock, fatigue.\n- Effects of surface finish, size, temperature, and stress concentration.\n- Creep and thermal stresses in design.\n\nModule 2:\n- Stresses in shafts: static loads, combined stresses, reversed bending, steady loads.\n- Design of shafts based on deflection and strength.\n- Critical speed of shafts.\n- Analysis and design of sliding and rolling contact bearings.\n\nModule 3:\n- Riveted joints: stress analysis, central & eccentric loads, boiler/tank joints, structural joints.\n- Bolted joints: stresses, central & eccentric loading.\n- Welded joints: types, stresses, axial/torsional/bending loads, fluctuating loads.\n\nModule 4:\n- Clutches: friction clutches (uniform wear & uniform pressure), centrifugal clutches.\n- Brakes: design of internal expansion, external contraction, and band brakes.\n\nModule 5:\n- Gears: spur, helical, bevel, worm.\n- Springs: helical compression/tension springs — stresses, deflection, fatigue.\n- Helical torsion springs.\n- Critical frequency of springs.\n- Leaf springs and automotive leaf spring design.\n\nCourse Outcomes:\n- Understand methodologies for designing various machine components.\n- Apply theoretical knowledge to practical mechanical design.\n\nData Books Allowed:\n- Mahadevan & Balaveera Reddy: Design Data Hand Book.\n- Dr. Linghaigh & Prof. Narayana Iyengar (Vol.1 & 2): Design Data Hand Book.\n- P.S.G. Tech: Design Data Hand Book.\n\nTextbooks:\n- Shigley J.E. & Mischke C.R., Mechanical Engineering Design, 5th ed., McGraw-Hill, 1989.\n- Deutschman D., Michels W.J., Wilson C.E., Machine Design Theory and Practice, Macmillan, 1992.\n- Juvenile R.C., Fundamentals of Machine Component Design, John Wiley, 1994.\n- Spottes M.F., Design of Machine Elements, Prentice-Hall India, 1994.\n- Norton R.L., Mechanical Design – An Integrated Approach, Prentice Hall, 1998.\n\nLaboratory:\n- Study of knuckle & cotter joint design procedure.\n- Design of shafts under torsion, bending, and combined loading.\n- Design of flat & square keys.\n- Design & drawing of riveted joints.\n- Design & drawing of screw jack.\n- Journal Bearing Test Rig."
},
 "Data Science 105 701": {
  "type": "text",
  "text": "L:3\nT:0\nP:0\nCREDIT:3\n\nObjectives:\n- Provide mathematical foundations needed for data science.\n- Develop programming skills to build data science applications.\n\nModule 1:\n- Introduction to Data Science: concept, traits of big data, web scraping.\n- Analysis vs reporting.\n\nModule 2:\n- Introduction to programming tools for data science (Python): Matplotlib, NumPy, Scikit-learn, NLTK.\n- Data visualization: bar charts, line charts, scatterplots.\n- Working with data: reading files, web scraping, using APIs (e.g., Twitter API), cleaning & munging, manipulating data, rescaling, dimensionality reduction.\n\nModule 3:\n- Mathematical foundations:\n  - Linear algebra: vectors, matrices.\n  - Statistics: describing data, correlation, Simpson’s paradox, correlation vs causation.\n  - Probability: dependence & independence, conditional probability, Bayes’s theorem, random variables, continuous distributions, normal distribution, central limit theorem.\n  - Hypothesis and inference: statistical hypothesis testing, confidence intervals, p-hacking, Bayesian inference.\n\nModule 4:\n- Machine learning overview: overfitting, train/test splits.\n- Types: supervised, unsupervised, reinforced learning.\n- Introduction to Bayes theorem.\n- Linear regression: model assumptions, regularization (lasso, ridge, elastic net).\n- Classification & regression algorithms: Naïve Bayes, KNN, logistic regression, SVM, decision trees, random forest.\n- Classification errors.\n- Time series analysis.\n- Linear systems analysis, nonlinear dynamics, rule induction.\n- Neural networks: learning & generalization.\n- Overview of deep learning.\n\nModule 5:\n- Case studies: weather forecasting, stock market prediction, object recognition, real-time sentiment analysis.\n\nModule 6 – Practicals:\n- Python program to predict flower class based on attributes.\n- Python program to predict loan approval.\n- Python program to predict traffic on new transport mode.\n- Python program to predict class of user.\n- Python program to identify hate tweets.\n- Python program to predict actors' ages.\n- Mini project: predict problem-solving time given user status.\n\nReference Books:\n- Joel Grus, Data Science from Scratch: First Principles with Python, O'Reilly Media.\n- Aurélien Géron, Hands-On Machine Learning with Scikit-Learn and TensorFlow, 1st ed., O'Reilly Media.\n- Jain V.K., Data Sciences, Khanna Publishing House, Delhi.\n- Jain V.K., Big Data and Hadoop, Khanna Publishing House, Delhi.\n- Jeeva Jose, Machine Learning, Khanna Publishing House, Delhi.\n- Chopra Rajiv, Machine Learning, Khanna Publishing House, Delhi.\n- Ian Goodfellow, Yoshua Bengio, Aaron Courville, Deep Learning, MIT Press.\n- Jiawei Han, Jian Pei, Data Mining Concepts and Techniques, 3rd ed., Morgan Kaufmann Publishers."
 },
 "105 702 Computational Complexity": {
  "type": "text",
  "text": "L:3\nT:0\nP:0\nCREDIT:3\n\nModule 1:\n- Models of computation, resources (time and space).\n- Algorithms, computability, complexity.\n\nModule 2:\n- Complexity classes: P, NP, PSPACE.\n- Reductions, hardness, completeness.\n- Hierarchy and relationships between complexity classes.\n\nModule 3:\n- Randomized computation and complexity.\n- Logical characterizations, incompleteness.\n- Approximability.\n\nModule 4:\n- Circuit complexity, lower bounds.\n- Parallel computation and complexity.\n- Counting problems.\n- Interactive proofs.\n\nModule 5:\n- Probabilistically checkable proofs.\n- Communication complexity.\n- Quantum computation.\n\nReference Books:\n- Christos H. Papadimitriou, Combinatorial Optimization: Algorithms and Complexity, Prentice-Hall.\n- Sanjeev Arora, Boaz Barak, Complexity Theory: A Modern Approach, Cambridge University Press.\n- Steven Homer, Alan L. Selman, Computability and Complexity Theory, Springer."
},
"105 703 Advanced Computer Architecture": {
  "type": "text",
  "text": "L:3\nT:0\nP:0\nCREDIT:3\n\nModule 1:\n- Classes of computers.\n- Trends in technology, power, and costs.\n- Dependability, quantitative principles of computer design.\n- Introduction to computing models.\n\nModule 2:\n- Principles of scalable performance, performance metrics and measures.\n- Speedup performance laws.\n- Advanced processor technology: superscalar and VLIW processors.\n- Verified memory, cache memory organizations, shared memory organizations.\n- Memory hierarchy, cache performance.\n- Protection and virtual memory examples.\n- Cache coherence.\n\nModule 3:\n- Pipeline and superscalar techniques.\n- Linear pipeline processors, reservation and latency analysis.\n- Collision-free scheduling, pipeline schedule optimization.\n- Instruction pipeline design, arithmetic pipeline design.\n- Superscalar and super pipeline design.\n\nModule 4:\n- Multiprocessors and multicomputers.\n- Overview of SIMD, MIMD, vector architectures, and multicore architectures.\n\nModule 5:\n- Elementary theory of dependence analysis.\n- Techniques for extraction of parallelism.\n- Branch prediction, dynamic scheduling, multiple issues, and speculation.\n- Limits on instruction-level parallelism.\n- Thread-level parallelism.\n\nReference Books:\n- Hennessy and Patterson, Computer Architecture: A Quantitative Approach, Morgan Kaufmann.\n- Kai Hwang, Advanced Computer Architecture, McGraw Hill.\n- Sima D., Fountain T., Kacsuk P., Advanced Computer Architectures: A Design Space Approach, Pearson Education."
},
"105 704 Theory of Computation": {
  "type": "text",
  "text": "L:3\nT:0\nP:0\nCREDIT:3\n\nLogic:\n- First-order predicate calculus: syntax, semantics, validity, and satisfiability.\n- Decision problems in logic.\n- Quantified Boolean formulas and their relation to the polynomial hierarchy.\n\nComputability Theory:\n- Review of Turing machines and other computing models/formalisms.\n- Equivalence with Turing machines.\n- Undecidability, Post correspondence problem.\n- Turing computability, primitive recursive functions.\n- Cantor and Gödel numbering, Ackermann function.\n- Mu-recursive functions.\n- Recursiveness of Ackermann and Turing computable functions.\n- Lambda calculus, term rewriting.\n- Oracle machines and the arithmetic hierarchy.\n\nComplexity Theory:\n- Time- and space-bounded Turing machines.\n- Reduction and complete problems.\n- Oracle machines and the polynomial hierarchy.\n- Randomized computation.\n- Parallel computation.\n\nReference Books:\n- Michael Sipser, Introduction to the Theory of Computation, PWS Publishing.\n- Fred C. Hennie, Introduction to Computability, Addison-Wesley.\n- Bernard M. Moret, The Theory of Computation, Pearson Education Asia.\n- Christos H. Papadimitriou, Computational Complexity, Addison-Wesley Longman.\n- Dexter C. Kozen, Automata and Computability, Springer.\n- John Martin, Introduction to Languages and The Theory of Computation, Tata McGraw Hill.\n- John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman, Introduction to Automata Theory, Languages, and Computation, Pearson Education Asia."
},
"105 705 Internet of Things": {
  "type": "text",
  "text": "L:3\nT:0\nP:0\nCREDIT:3\n\nObjectives:\n- Impart practical knowledge of Internet of Things components.\n- Develop skills for building real-life IoT projects.\n\nModule 1:\n- Introduction to IoT: Architectural overview, design principles, capabilities.\n- IoT Applications: sensing, actuation, basics of networking.\n- M2M and IoT Technology Fundamentals: devices, gateways, data management, business processes.\n- Everything as a Service (XaaS), role of cloud, IoT security aspects.\n\nModule 2:\n- Elements of IoT:\n  - Hardware: Arduino, Raspberry Pi, communication, sensing, actuation, I/O interfaces.\n  - Software: Programming APIs (Python/Node.js/Arduino) for communication.\n  - Protocols: MQTT, ZigBee, Bluetooth, CoAP, UDP, TCP.\n\nModule 3:\n- IoT Application Development:\n  - Solution framework for IoT applications.\n  - Device integration, data acquisition and integration.\n  - Device data storage: unstructured data storage (cloud/local).\n  - Authentication and authorization of devices.\n\nModule 4:\n- IoT Case Studies and Mini Projects:\n  - Industrial automation, transportation, agriculture, healthcare, home automation.\n\nLearning Outcomes:\n- Understand IoT hardware and software components.\n- Interface I/O devices, sensors, and communication modules.\n- Remotely monitor data and control devices.\n- Develop real-life IoT-based projects.\n\nSuggested Books:\n- Vijay Madisetti, Arshdeep Bahga, Internet of Things: A Hands-on Approach, University Press.\n- Dr. SRN Reddy, Rachit Thukral, Manasi Mishra, Introduction to Internet of Things: A Practical Approach, ETI Labs.\n- Pethuru Raj, Anupama C. Raman, The Internet of Things: Enabling Technologies, Platforms, and Use Cases, CRC Press.\n- Jeeva Jose, Internet of Things, Khanna Publishing House, Delhi.\n- Adrian McEwen, Designing the Internet of Things, Wiley.\n- Raj Kamal, Internet of Things: Architecture and Design, McGraw Hill.\n- Cuno Pfister, Getting Started with the Internet of Things, O'Reilly Media."
},
"105 706 Natural Language Processing": {
  "type": "text",
  "text": "L:3\nT:0\nP:0\nCREDIT:3\n\nModule 1:\n- Sound: Biology of speech processing, place and manner of articulation, word boundary detection.\n- Argmax-based computations, Hidden Markov Models (HMM) and speech recognition.\n\nModule 2:\n- Words and Word Forms: Morphology fundamentals, morphological diversity of Indian languages, morphology paradigms.\n- Finite State Machine-based morphology, automatic morphology learning.\n- Shallow parsing, named entities, maximum entropy models, random fields.\n\nModule 3:\n- Structures: Theories of parsing, parsing algorithms.\n- Robust and scalable parsing on noisy text (e.g., web documents).\n- Hybrid of rule-based and probabilistic parsing, scope ambiguity, attachment ambiguity resolution.\n\nModule 4:\n- Meaning: Lexical knowledge networks, WordNet theory, Indian language WordNets and multilingual dictionaries.\n- Semantic roles, word sense disambiguation (WSD), WSD and multilinguality, metaphors, coreferences.\n\nModule 5:\n- Web 2.0 Applications: Sentiment analysis, text entailment.\n- Robust and scalable machine translation.\n- Question answering in multilingual setting, cross-lingual information retrieval (CLIR).\n\nReference Books:\n- Jurafsky, Dan and Martin, James, Speech and Language Processing, 2nd Ed., Prentice Hall, 2008.\n- Manning, Christopher and Schutze, Heinrich, Foundations of Statistical Natural Language Processing, MIT Press, 1999.\n- Allen, James, Natural Language Understanding, 2nd Ed., Benjamin Cummings, 1995.\n- Charniack, Eugene, Statistical Language Learning, MIT Press, 1993."
},
"105 707 E-Commerce and ERP": {
  "type": "text",
  "text": "L:3\nT:0\nP:0\nCREDIT:3\n\nModule 1:\n- Introduction to E-Commerce: Evolution, advantages and disadvantages, roadmap of E-Commerce in India.\n- Business models based on transaction party: B2B, B2C, C2B, C2C.\n\nModule 2:\n- E-Marketing: Scope, identifying web presence goals, uniqueness of the web, meeting website visitors' needs.\n- Website design issues: Factors encouraging return visits, strategies for website development.\n- Site adhesion: Content, format, and access; maintaining a website.\n- E-Advertising, E-Branding.\n\nModule 3:\n- E-Payment System: Digital payment requirements, digital token-based E-payment system, electronic cash, smart card.\n- Electronic payment methods: Credit card, debit card, virtual currency, digital wallet.\n- Risks in electronic payment systems, digital signatures.\n- E-Security: Internet security risks—DoS attacks, viruses, unauthorized access.\n- Security standards: Firewalls, cryptography, key management, password systems, digital certificates, digital signatures.\n\nModule 4:\n- Enterprise Resource Planning (ERP): Concepts, advantages, disadvantages.\n- ERP-related technologies: Business process reengineering, data warehousing, data mining, supply chain management.\n- ERP implementation: Life cycle, methodology, hidden costs, organizing implementation.\n- Contracts with vendors, consultants, users; project management and monitoring.\n\nModule 5:\n- ERP Business Modules: Finance, manufacturing, human resource, plant maintenance, materials management, quality management, sales and distribution.\n- Case study: Recent business issues from an E-Commerce perspective.\n\nTextbooks:\n- Alexis Leon, ERP Demystified, Tata McGraw Hill.\n- P.T. Joseph, E-Commerce: An Indian Perspective, PHI.\n\nReference Books:\n- K.K. Bajaj, D. Nag, E-Commerce, 2nd Ed., McGraw-Hill Education, New Delhi.\n- Bhaskar Bharat, Electronic Commerce—Technology and Application, McGraw-Hill Education, New Delhi.\n- Mary Sumner, Enterprise Resource Planning, 2005, PHI Learning India / Pearson Education, New Delhi.\n- Chan, E-Commerce Fundamentals and Applications, Wiley India, New Delhi.\n- Vinod Kumar Garg, N.K. Venkata Krishnan, Enterprise Resource Planning: Concepts and Planning, Prentice Hall, 1998."
},
"105 708 Robotics and Robot Application": {
  "type": "text",
  "text": "L:3\nT:0\nP:0\nCREDIT:3\n\nObjective:\n- Impart knowledge about industrial robots for their control and design.\n\nModule 1:\n- Introduction to Robotics: Types and components of a robot, classification of robots.\n- Closed-loop and open-loop control systems.\n- Kinematic systems; definition of mechanisms and manipulators.\n- Social issues and safety.\n\nModule 2:\n- Robot Kinematics and Dynamics:\n  - Kinematic Modelling: Translation and rotation representation, coordinate transformation, Denavit–Hartenberg (DH) parameters, Jacobian, singularity, and statics.\n  - Dynamic Modelling: Equations of motion using Euler–Lagrange formulation.\n\nModule 3:\n- Sensors and Vision System:\n  - Sensors: Contact, proximity, position, velocity, force, tactile.\n  - Cameras: Introduction, camera calibration, geometry of image formation.\n  - Transformations: Euclidean, similarity, affine, projective.\n  - Vision applications in robotics.\n\nModule 4:\n- Robot Control:\n  - Basics: Transfer functions, control laws—P, PD, PID.\n  - Non-linear and advanced controls.\n  - Robot Actuation Systems: Electric, hydraulic, pneumatic actuators.\n  - Transmission: Gears, timing belts, bearings.\n  - Parameters for actuator selection.\n\nModule 5:\n- Control Hardware and Interfacing:\n  - Embedded systems: Architecture, integration with sensors, actuators, components.\n  - Programming for robot applications.\n\nSuggested Books:\n- S.K. Saha, Introduction to Robotics, 2nd Ed., McGraw-Hill, 2014.\n- A. Ghosal, Robotics, Oxford, 2006.\n- Saeed B. Niku, Introduction to Robotics: Analysis, Systems, Applications, PHI.\n- R.K. Mittal, I.J. Nagrath, Robotics and Control, Tata McGraw Hill.\n- S. Mukherjee, Robotics and Automation, Khanna Publishing House.\n- J.J. Craig, Introduction to Robotics: Mechanics and Control, Pearson, 2009.\n- Mark W. Spong, Seth Hutchinson, M. Vidyasagar, Robot Modelling and Control, Wiley, 2005.\n- Steve Heath, Embedded System Design, 2nd Ed., Newnes, 2003.\n- R. Merzouki et al., Intelligent Mechatronic System: Modeling, Control and Diagnosis, Springer.\n\nLearning Outcomes:\n- Perform kinematic and dynamic analyses with simulation.\n- Design control laws for a robot.\n- Integrate mechanical and electrical hardware for a robotic prototype.\n- Select a robotic system for a given application."
}
}
