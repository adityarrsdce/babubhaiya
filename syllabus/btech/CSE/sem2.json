{
"Engineering Mathematics-II": {
    "type": "text",
    "text": "📘 COURSE CODE: 100202\n📗 Subject: Engineering Mathematics-II\n\n📚 UNIT 1.0: Complex Analysis - I (6 hrs)\nFunctions of complex variable, limit, continuity, differentiability, analytic function, Cauchy-Riemann equations in Cartesian and polar form, harmonic function and harmonic conjugate.\n\n📚 UNIT 2.0: Complex Analysis - II (8 hrs)\nLine integral, contour integrals, Cauchy theorem, Cauchy's integral formula (without proof), Taylor series, zero of analytic functions, singularities, Laurent's series, residue, Cauchy residue theorem (without proof) and its applications.\n\n📚 UNIT 3.0: Ordinary Differential Equations (8 hrs)\nLinear differential equations of nth order with constant coefficients, solution of homogeneous and non-homogeneous equations, equations with variable coefficients, Cauchy-Euler equations, method of variation of parameters.\n\n📚 UNIT 4.0: Sequence and Series (6 hrs)\nIntroduction of sequence and series, nature of series, tests of convergence: comparison test, D'Alembert ratio test, Cauchy's root test, Raabe's test, logarithmic test, Cauchy's condensation test.\n\n📚 UNIT 5.0: Laplace Transform (8 hrs)\nLaplace transform, existence theorem, properties, Laplace of periodic functions, inverse Laplace transform, convolution theorem. Application to solve ordinary differential equations.\n\n📚 UNIT 6.0: Fourier Series (6 hrs)\nFourier series, Fourier series for odd and even functions, half range sine and cosine series, Parseval's theorem.\n\n📘 TEXT / REFERENCE BOOKS:\n1. Advanced Engineering Mathematics – Kreyszig Erwin (Wiley)\n2. Advanced Engineering Mathematics – H.K. Dass (S. Chand)\n3. Higher Engineering Mathematics – B.S. Grewal (Khanna)\n4. Complex Variables – H.S. Kasana (PHI)\n5. A Text Book of Engineering Mathematics – N.P. Bali, M.L. Goyal (Laxmi)\n6. Higher Engineering Mathematics – B.V. Ramana (Tata McGraw Hill)\n7. Differential Equations – S.L. Ross (Wiley)\n8. Advanced Differential Equations – M.D. Raisinghania (S. Chand)\n9. Schaum's Outlines Complex Variables – Spiegel et al. (McGraw Hill)"
},
"Engineering Chemistry": {
    "type": "text",
    "text": "📘 COURSE CODE: 100215\n📗 Subject: Engineering Chemistry\n\n📚 UNIT 1.0: Atomic and Molecular Structure (8 hrs)\nElectromagnetic radiations, Dual nature of electron and Heisenberg uncertainty principle, Photoelectric effect, Planck's theory. Principles for the combination of atomic orbitals to form a molecular diagram of molecular orbitals. Bent's rule, VSEPR theory (typical example), coordination numbers and geometries. Isomerism in transition metal compounds. Metal carbonyls: synthesis and structure.\n\n📚 UNIT 2.0: Spectroscopy (6 hrs)\nPrinciple of rotational and vibrational spectroscopy, selection rule for diatomic molecules, elementary idea of electronic spectroscopy. UV-VIS spectroscopy: selection rules and applications. Basic principle of nuclear magnetic resonance (NMR) spectroscopy with applications.\n\n📚 UNIT 3.0: Electrochemistry and Fuels (6 hrs)\nNernst equation, EMF and electrochemical cell, corrosion introduction and mechanisms. Types of corrosion: water line, stress, pitting corrosion. Lead acid storage cell, Leclanche cell. Calorific value of fuels, proximate and ultimate analysis of coal, fuel cells, biofuels.\n\n📚 UNIT 4.0: Water Chemistry (8 hrs)\nHardness of water, estimation of hardness by EDTA and alkalinity methods. Removal of hardness: soda lime process, zeolite process, ion exchange process. Boiler problems: sludge and scale formation, priming and foaming, boiler corrosion, and caustic embrittlement.\n\n📚 UNIT 5.0: Polymer and Plastics (8 hrs)\nPolymerization techniques: free radical, ionic, and coordination mechanisms. Preparation, properties, and applications of phenol-formaldehyde resins, elastomers, synthetic rubbers (Buna-S, Buna-N, neoprene). Inorganic polymers: silicones, adhesives, epoxy resins. Structural difference between thermoplastics and thermosetting plastics. Importance of polyethylene, polyvinyl chloride, polystyrene.\n\n📚 UNIT 6.0: Organic Reactions and Synthesis of Drug Molecules (6 hrs)\nIntroduction to intermediates and reactions involving substitution, addition, elimination, oxidation-reduction. Diels-Alder cyclization and epoxide ring-opening reactions. Synthesis of commonly used drug molecules like aspirin.\n\n📘 TEXT / REFERENCE BOOKS:\n1. University Chemistry – B.H. Mahan (Pearson)\n2. Chemistry: Principles and Applications – M.J. Sienko & R.A. Plane (McGraw Hill)\n3. Fundamentals of Molecular Spectroscopy – C.N. Banwell (McGraw Hill)\n4. Engineering Chemistry – B.L. Tembe, Kamaluddin, M.S. Krishnan (NPTEL Web Book)\n5. Physical Chemistry – P.W. Atkins (Oxford University Press)\n6. A Textbook of Engineering Chemistry – S. Chawla (Dhanpat Rai)\n7. General Chemistry Part 1 – R. Sarkar (New Central Book Agency)"
},
"Engineering Chemistry Lab": {
  "type": "text",
  "text": "📘 COURSE CODE: 100215P\n📗 Subject: Engineering Chemistry Lab\n\n🔬 **Perform any 10 Experiments:**\n\n1️⃣ To estimate hardness of water by alkalinity method\n2️⃣ To estimate hardness of water by EDTA method\n3️⃣ To remove hardness of water by ion exchange method\n4️⃣ Determination of pH of a given acid solution using a standard sodium hydroxide solution\n5️⃣ Determination of surface tension and viscosity\n6️⃣ Chemical analysis of salt (Acid radical and basic radical)\n7️⃣ Adsorption of acetic acid by charcoal\n8️⃣ Test of adulteration of fat butter, sugar, turmeric powder, chilli powder and pepper\n9️⃣ Saponification/ acid value of an oil\n🔟 Identification of organic substances and their functional groups\n1️⃣1️⃣ Potentiometric determination of redox potentials and emf\n1️⃣2️⃣ Synthesis of drug/polymer like ASPIRIN / Urea-formaldehyde resin\n1️⃣3️⃣ Thin layer chromatography\n1️⃣4️⃣ Analysis of flue gas by Orsat apparatus"
},
"Communicative English": {
    "type": "text",
    "text": "📘 COURSE CODE: 100216\n📗 Subject: Communicative English\n\n📚 UNIT 1.0: Vocabulary Building (7 hrs)\nNature of word formation, root word and morpheme, prefix and suffix, foreign expressions in English, synonym and antonym, homophone and homograph, abbreviation and acronym.\n\n📚 UNIT 2.0: Basic Writing Skills (7 hrs)\nParts of speech, sentence structure, phrase and clause, punctuation, capitalization, tenses, voices, question formation.\n\n📚 UNIT 3.0: Common Errors in English (7 hrs)\nArticles, prepositions, modifiers, subject-verb agreement, noun-pronoun agreement, redundancies, clichés, spelling errors.\n\n📚 UNIT 4.0: Principles of Appropriate Writing (7 hrs)\nDefining, describing, classifying, exemplifying, 7 Cs of professional writing, structuring a document.\n\n📚 UNIT 5.0: Practices of Formal Writing (7 hrs)\nCover letter, resume, report, minutes of meeting, memorandum, notice, essays, email etiquette, article writing, social media writing.\n\n📚 UNIT 6.0: Comprehension of Written English (7 hrs)\nSir Francis Bacon – Of Studies (Essay), John Donne – The Sun Rising (Poem), O. Henry – The Last Leaf (Story), unseen passage.\n\n📘 TEXT / REFERENCE BOOKS:\n1. English Language and Communication Skills for Engineers – Sanjay Kumar, Pushp Lata (Oxford)\n2. Communicative English for Technical Students – Dr. Bijay Bhadur Singh, Dr. Kalpana Sinha (FPM)\n3. Communication Skills – Sanjay Kumar, Pushp Lata (Oxford)\n4. A Course in Listening & Speaking – V. Sasi Kumar et al. (Foundation Books)"
},
"Communicative English Lab": {
  "type": "text",
  "text": "📘 COURSE CODE: 100216P\n📗 Subject: Communicative English Lab\n\n🔬 **Perform any 10 Experiments:**\n\n💬 The Language Lab includes:\n- Listening Comprehension\n- Reading Comprehension\n- Speaking Skills: Phonetics, International Phonetic Alphabet Symbols (IPAS), Sounds: Vowels and Consonants, Pronunciation, Intonation, Stress and Rhythm\n- Just A Minute Technique (JAM)\n- Communication: Verbal and Non-Verbal\n- Ethical Usage of Artificial Intelligence\n- Self-Introduction: Social, Academic and Professional\n- Interview: Online and Offline\n- Oral Presentation, Debate, Group Discussion\n- Group Activities and Brainstorming\n\n📚 **Vocabulary Activities:**\n\n1️⃣ Listening Comprehension and Speed (Software)\n2️⃣ Reading Comprehension and Speed (Software)\n3️⃣ Pronunciation: Learning and Test (Software)\n4️⃣ Self-Introduction: Social, Academic and Professional\n5️⃣ English Typing: Microsoft Word Document (MS Word) and Microsoft PowerPoint Presentation (PPT)\n6️⃣ Oral Presentation\n7️⃣ Interview: Online and Offline\n8️⃣ Just A Minute Technique (JAM) and Extempore\n9️⃣ Debate\n🔟 Group Discussion\n1️⃣1️⃣ Activities: Role Play, Peer Activities, and Group Activities\n1️⃣2️⃣ Anchoring and Addressing: an Assembly, a Meeting, a Seminar, a Party"
},
"Python Programming": {
    "type": "text",
    "text": "📘 COURSE CODE: 100218\n📗 Subject: Python Programming\n\n📚 UNIT 1.0: Input and Output (6 hrs)\nIdentifiers, keywords, statements and expressions, variables, operators, precedence, data types, indentation, comments, reading input, print output, type conversions, type() function, is operator, dynamic and strongly typed language.\n\n📚 UNIT 2.0: Control Flow, Functions and Loops (6 hrs)\nDecision control statements, nested if, built-in functions, function definitions, return, variable scope, default parameters, while loop, for loop, continue and break.\n\n📚 UNIT 3.0: Strings (3 hrs)\nString creation, operations, indexing, slicing, string methods, formatting.\n\n📚 UNIT 4.0: Lists (3 hrs)\nCreating lists, operations, indexing, slicing, built-in functions, list methods, del statement.\n\n📚 UNIT 5.0: Dictionaries, Tuples and Sets (5 hrs)\nCreating/accessing dictionaries, methods, del, tuples and sets: creation, operations, methods, traversing, frozen set, zip().\n\n📚 UNIT 6.0: Files (5 hrs)\nText and binary files, file read/write methods, Pickle module, CSV files, os and os.path modules.\n\n📘 TEXT / REFERENCE BOOKS:\n1. Introduction to Python Programming – Gowrishankar S, Veena A (CRC Press)\n2. Python Data Science Handbook – Jake VanderPlas (O'Reilly)\n3. Core Python Applications Programming – Wesley J Chun (Pearson)\n4. Python Programming: A Modular Approach – Sheetal Taneja (Pearson)\n5. Programming and Problem Solving with Python – A.N. Kamathane, A.A. Kamathane (TMH)"
},
"Python Programming Lab": {
    "type": "text",
    "text": "📘 COURSE CODE: 100218P\n📗 Subject: Python Programming Lab\n\n🔬 **List of Experiments:**\n\n📂 *Input and Output*\n1. Demonstrate different number data types in Python.\n2. Perform different Arithmetic Operations on numbers.\n3. Create, concatenate and print a string; access sub-string.\n4. Assign an Integer to a variable and check if it's Positive or Negative.\n5. Find the largest element among three Numbers.\n6. Print the sum of all even numbers in the range 1 to 50.\n7. Display all prime numbers within an interval of 20 and 50.\n\n📂 *Variables and Functions*\n8. Swap two numbers without using a temporary variable.\n9. Define a function with multiple return values.\n10. Find factorial of a number using recursion.\n11. Print the current date in format - WED 09 02:26:23 IST 2020.\n12. Convert temperatures to/from Celsius & Fahrenheit.\n13. Print prime numbers less than 20.\n\n📂 *Loops and Conditionals*\n14. Print different patterns using loops.\n15. Print multiplication tables of 8, 15, 69.\n16. Check whether input is digit, lowercase, uppercase, or special character.\n17. Print Fibonacci sequence using while loop.\n\n📂 *Strings*\n18. Find length of a string without using library functions.\n19. Check if two strings are anagrams.\n20. Check if a substring is present in a given string (use regex).\n\n📂 *Lists*\n21. Perform add, insert, slicing on a list.\n22. Use any 5 built-in functions on a list.\n23. Get list of even numbers using list comprehension.\n24. Implement round robin element extraction from variable input sequences.\n\n📂 *Tuples*\n25. Create and concatenate tuples (name, age, address, college).\n26. Return top 'n' most frequently occurring characters and their counts.\n\n📂 *Sets*\n27. Count vowels in a string (no control flow).\n28. Display letters present in both strings.\n29. Sort list of strings by their vowel counts.\n\n📂 *Dictionaries*\n30. Generate a dictionary of x: x*x between 1 and n.\n31. Check if a key exists in a dictionary.\n32. Add new key-value pair to a dictionary.\n33. Sum all items in a dictionary.\n\n📂 *Files*\n34. Sort words in a file and write them to another file (all lowercase).\n35. Find most frequent words in a text file.\n\n📂 *Additional Programs*\n1. Check if a number has even number of 1's in binary (no control flow).\n2. Implement user-defined map() function.\n3. Remove duplicates and sort a list of strings.\n4. Implement left binary search.\n5. Convert days to hours, hours to minutes, and minutes to seconds using currying.\n6. Generate infinite even numbers using generator.\n7. Convert iterable to list using iterator.\n8. Accept whitespace-separated words, remove duplicates, and sort them.\n\n📘 **TEXT / REFERENCE BOOKS:**\n1. Y. Daniel Liang, *Introduction to Programming using Python*, Pearson, 2017.\n2. Sheetal Taneja, *Python Programming: A Modular Approach*, Pearson, 2017.\n3. Brett Slatkin, *Effective Python: 59 Specific Ways to Write Better Python*, Pearson, 2015."
  },
"Introduction to Web Design": {
    "type": "text",
    "text": "📘 COURSE CODE: 100219\n📗 Subject: Introduction to Web Design\n\n📚 UNIT 1.0: Fundamentals of Internet and Web Technologies (5 hrs)\nWeb Basics and Overview: Introduction to Internet, World Wide Web, History of the web, Website, Homepage, Domain Name, Web Browsers and Web server, Web Server Working, Client-Server Architecture, 3-Tier Web Architecture, Web hosting, URL, MIME, HTTP protocol, Web Programmers Toolbox.\n\n📚 UNIT 2.0: Introduction to HTML (7 hrs)\nFundamentals of HTML elements, History of HTML, Document body, Different tags, sections, text, heading, paragraphs, hyperlink, lists, tables, color coding and images, Div and Span Tags for grouping, character entities, URL Encoding, frames, and frame sets.\n\n📚 UNIT 3.0: HTML Forms and Multimedia Integration (5 hrs)\nHTML form, Form Elements, Form Attributes, HTML canvas, embedding audio and video in a webpage, HTML Vs XHTML.\n\n📚 UNIT 4.0: Introduction to CSS: Styling and Layouts (8 hrs)\nNeed for CSS, introduction to CSS, basic syntax and structure, External Style Sheets, Internal Style Sheets, Inline Style, CSS Selectors, div & span tag, CSS Color, CSS Backgrounds, Borders, Margins, Padding. Box Model, Height width, outline, Text, Font, Tables, CSS Buttons, CSS Display, CSS Float & Clear, CSS Overflow.\n\n📚 UNIT 5.0: JavaScript Basics: Scripting and Control (8 hrs)\nIntroduction to Client-side Scripting, what can JavaScript Do, Need of JavaScript, Enhancing HTML Documents with JavaScript; the Building Blocks: Data types, variables, Types of Operators, Operator Precedence, Type conversion; Conditional statement in JavaScript: if else, and else if, Switch statement; Loops in JavaScript: for, while, do/while, break, continue.\n\n📚 UNIT 6.0: Advanced JavaScript: Objects and Events (9 hrs)\nObjects in JavaScript (array, number, string, Boolean); event handling (e.g., onclick, onsubmit); error handling: JavaScript scope; responsive modal forms; form validation.\n\n📘 TEXT / REFERENCE BOOKS:\n1. Beginning Web Programming with HTML, XHTML, and CSS – Jon Duckett (WROX)\n2. JavaScript: The Definitive Guide, 6th Edition – David Flanagan (O'Reilly Media)\n3. Internet & World Wide Web: How to Program, Fourth Edition – H.M. Deitel & P.J. Deitel (Pearson)\n4. Internet and Web Technologies – Kamal Raj (McGraw Hill Education India)"
},
"Introduction to Web Design Lab": {
  "type": "text",
  "text": "📘 COURSE CODE: 100219P\n📗 Subject: Introduction to Web Design Lab\n\n🔬 **List of Experiments:**\n\n1️⃣ **HTML Basics**: \n- Design a home page displaying information about your college department using headings, HTML entities, and paragraphs. \n- Implement different types of list tags.\n- Create a webpage for a clinic using marquee and formatting tags.\n- Embed image(s) and iframe in a webpage.\n\n2️⃣ **Hyperlinks & Media Integration**:\n- Create a hyperlink in the homepage connecting to 3 different pages.\n- Design a webpage using an image map, embed audio and video.\n- Display a timetable in a tabular format.\n- Create an admission form using input types: text, password, drop-down list, check-boxes, radio buttons, submit and reset.\n\n3️⃣ **Frames & Styles**:\n- Design a static webpage using HTML and create a frameset with header, navigation, and content.\n- Create a webpage with a 3-frame layout: 20% left (contents), 60% center (main), 20% right (remarks).\n- Demonstrate the use of multiple types of stylesheets (inline, internal, external) in a single page.\n\n4️⃣ **CSS Projects**:\n- Create an electronic product catalogue using CSS.\n- Design a webpage for your hometown with background, font styles, and images using inline CSS.\n- Create a student information web form.\n- Design a library webpage using different border styles and CSS box model.\n\n5️⃣ **JavaScript Basics**:\n- Find the largest among three numbers.\n- Calculate factorial of a number.\n- Check for Armstrong number.\n- Sum of natural numbers using recursion.\n- Check if a string is a palindrome.\n- Convert decimal to binary.\n\n6️⃣ **JavaScript Applications**:\n- Design a scientific calculator with event handling.\n- Display squares and cubes of numbers from 0 to 10 in an HTML table.\n\n7️⃣ **JavaScript Form Validation**:\n- Name: Only alphabets, min 6 characters.\n- Password: At least 6 characters.\n- Email: Valid pattern (name@domain.com).\n- Phone Number: Exactly 10 digits."
},
"Sports/Yoga/NCC/NSS": {
  "type": "text",
  "text": "📘 COURSE CODE: 100220P\n📗 Subject: Sports/Yoga/NCC/NSS\n\n🎯 COURSE OBJECTIVES:\n\n(a) **Encouraging creativity and innovation**: Foster a culture of creativity and innovation among engineering students through brainstorming sessions, design thinking exercises, and hands-on projects.\n\n(b) **Enhancing problem-solving skills**: Train students on root cause analysis, critical thinking, and decision-making to solve complex engineering problems effectively.\n\n(c) **Developing project management skills**: Cover project planning, scheduling, budgeting, and risk management to equip students for managing resources and working collaboratively in a project-based environment.\n\n(d) **Promoting interdisciplinary collaboration**: Encourage students from different engineering disciplines to work on innovative projects, promoting teamwork and diverse perspectives.\n\n(e) **Facilitating practical application of engineering concepts**: Provide opportunities for students to apply theoretical knowledge to real-world projects, gaining hands-on experience and translating theory into practical solutions.\n\n📋 PRE-REQUISITE: Nil\n\n🎯 COURSE OUTCOMES:\n\n1️⃣ **Developed innovative projects**: Students design and develop prototypes, models, simulations, or real-world solutions showcasing creativity and technical skills.\n\n2️⃣ **Improved critical thinking and problem-solving**: Exposure to analytical techniques for breaking down and solving complex problems through informed decision-making.\n\n3️⃣ **Enhanced project management and teamwork**: Practical experience in planning and executing projects, team collaboration, and professional communication.\n\n4️⃣ **Increased interdisciplinary knowledge and collaboration**: Exposure to diverse engineering domains and collaborative experience with peers across disciplines.\n\n5️⃣ **Cultivated a mindset of innovation and entrepreneurship**: Instill adaptability, creativity, and entrepreneurial spirit to address societal or commercial challenges through innovative thinking.\n\n📝 LIST OF REPORTS:\nAny topic related to innovative project development, practical applications, and engineering-based solutions."
}
}
