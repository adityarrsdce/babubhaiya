{
    "Analog Electronic Circuits": {
  "type": "text",
  "text": "📘 Subject: Analog Electronic Circuits\n📗 Course Code: N/A (Not provided)\n🧮 Credits: 5 (3L:0T:4P)\n\n🎯 **Course Objectives:**\n1️⃣ Learn the fundamentals of analog electronic circuits.\n2️⃣ Design, construct and debug analog electronic circuits.\n3️⃣ Understand the operation, terminal characteristics, and equivalent circuit models for diodes, transistors, and op-amps.\n4️⃣ Analyze differential amplifiers, frequency response of cascaded amplifiers, and gain-bandwidth considerations.\n5️⃣ Explore linear and nonlinear applications of operational amplifiers.\n\n📚 **Modules:**\n\n📌 **Module 1 – Diode Circuits (4 hrs)**\n- P-N junction diode, I-V characteristics\n- Half-wave and full-wave rectifiers\n- Zener diodes, clamping and clipping circuits\n\n📌 **Module 2 – BJT Circuits (8 hrs)**\n- BJT structure and I-V characteristics\n- BJT as a switch and amplifier\n- Small-signal model, biasing circuits, current mirror\n- Common-emitter, common-base, and common-collector amplifiers\n- High-frequency equivalent circuits\n\n📌 **Module 3 – MOSFET Circuits (8 hrs)**\n- MOSFET structure and I-V characteristics\n- MOSFET as a switch and amplifier\n- Biasing, common-source, common-gate, common-drain amplifiers\n- Small signal gain, impedance, transconductance, high-frequency models\n\n📌 **Module 4 – Differential, Multi-stage, and Operational Amplifiers (8 hrs)**\n- Differential amplifier, power amplifier\n- Direct coupled multi-stage amplifier\n- Op-amp internal structure, ideal vs non-ideal (offsets, slew rate, GBW)\n\n📌 **Module 5 – Linear Applications of Op-Amp (8 hrs)**\n- Ideal analysis: inverting, non-inverting, differential, instrumentation amplifiers\n- Integrators, active filters, P/PI/PID controllers\n- Voltage regulators, Wein bridge, phase shift oscillators\n- Analog to Digital Conversion\n\n📌 **Module 6 – Nonlinear Applications of Op-Amp (4 hrs)**\n- Hysteretic comparator, zero crossing detector\n- Square and triangular wave generators\n- Precision rectifier, peak detector, monoshot\n\n📘 **Suggested Books:**\n1. *Microelectronic Circuits* – A.S. Sedra, K.C. Smith (Oxford University Press)\n2. *Introduction to Operational Amplifier Theory and Applications* – J.V. Wait et al. (McGraw Hill)\n3. *Microelectronics* – J. Millman and A. Grabel (McGraw Hill)\n4. *The Art of Electronics* – P. Horowitz, W. Hill (Cambridge University Press)\n5. *Analysis and Design of Analog Integrated Circuits* – P.R. Gray et al. (Wiley)\n\n🎓 **Course Outcomes:**\n1️⃣ Understand characteristics of transistors.\n2️⃣ Design and analyze various rectifier and amplifier circuits.\n3️⃣ Design sinusoidal and non-sinusoidal oscillators.\n4️⃣ Understand and design operational amplifier-based circuits."
},
"Data Structure and Algorithms": {
  "type": "text",
  "text": "📘 Subject: Data Structure and Algorithms\n📗 Course Code: N/A (Not provided)\n🧮 Credits: 5 (3L:0T:4P)\n🛠️ Pre-requisite: ESC 201 – Programming for Problem Solving\n\n🎯 **Course Objectives:**\n1️⃣ Understand the basic concepts of data structures and algorithms.\n2️⃣ Learn searching and sorting techniques and their analysis.\n3️⃣ Study stacks, queues, linked lists, trees, and graphs.\n4️⃣ Develop the ability to write algorithms using fundamental data structures.\n\n📚 **Detailed Modules:**\n\n📌 **Module 1 – Introduction & Searching:**\n- Basic Terminologies: Elementary Data Organizations\n- Data Structure Operations: Insertion, Deletion, Traversal, etc.\n- Algorithm Analysis, Asymptotic Notations, Time-Space Trade-offs\n- Searching: Linear Search, Binary Search with complexity analysis\n\n📌 **Module 2 – Stacks and Queues:**\n- ADT Stack, Operations, Algorithms, and Applications (Expression conversion/evaluation)\n- Queue Types: Simple, Circular, Priority Queue\n- Operations and Algorithm Analysis for each type\n\n📌 **Module 3 – Linked Lists & Trees:**\n- Singly Linked List: Representation, Traversal, Insertion, Deletion\n- Linked representation of Stack and Queue, Header nodes\n- Doubly and Circular Linked Lists: Operations and analysis\n- Trees: Terminologies, Binary Tree, Threaded Binary Tree, Binary Search Tree (BST), AVL Tree\n- Tree Operations and Applications\n- B Tree, B+ Tree: Definitions and algorithms\n\n📌 **Module 4 – Sorting, Hashing, and Graphs:**\n- Sorting: Selection, Bubble, Insertion, Quick, Merge, Heap Sort; performance comparison\n- Hashing: Concepts and applications\n- Graphs: Terminologies, Representation, Search and Traversal Algorithms, Complexity Analysis\n\n📘 **Suggested Books:**\n1. *Fundamentals of Data Structures* – Ellis Horowitz, Sartaj Sahni (Computer Science Press)\n\n📘 **Reference Books:**\n1. *Algorithms, Data Structures, and Problem Solving with C++* – Mark Allen Weiss (Addison-Wesley)\n2. *How to Solve it by Computer* – R.G. Dromey (Pearson Education)\n\n🎓 **Course Outcomes:**\n1️⃣ Analyze algorithms in terms of time and space complexity.\n2️⃣ Implement and analyze search techniques (Linear, Binary Search).\n3️⃣ Implement stacks, queues, and linked lists with complexity analysis.\n4️⃣ Write and compare sorting algorithms based on time/space.\n5️⃣ Implement and analyze graph search and traversal algorithms."
},
"Object Oriented Programming Using C++": {
  "type": "text",
  "text": "📘 Subject: Object Oriented Programming Using C++\n📗 Course Code: N/A (Not provided)\n🧮 Credits: 5 (3L:0T:4P)\n\n🎯 **Course Objectives:**\n1️⃣ Impart basic concepts of Object-Oriented Programming (OOP).\n2️⃣ Understand classes and data abstraction.\n3️⃣ Learn inheritance and polymorphism.\n4️⃣ Write algorithms using the object-oriented approach.\n\n📚 **Detailed Modules:**\n\n📌 **Module 1 – Introduction to C++ (3 hrs)**\n- OOP principles, advantages of OOP\n- Input/output in C++\n- Tokens, keywords, identifiers, data types\n- Type modifiers, typecasting, constants, operators, precedence, strings\n\n📌 **Module 2 – Control Structures and Functions (6 hrs)**\n- Decision-making: if-else, switch, break, continue, goto\n- Loops: for, while, do-while, nested loops\n- Functions: user-defined, value-returning, void\n- Function overloading and virtual functions\n\n📌 **Module 3 – Classes and Data Abstraction (12 hrs)**\n- Structures and classes in C++\n- Class operations, assignment, class scope\n- Reference parameters, class objects\n- Member functions, accessors, mutators\n- Constructors, default constructors, destructors\n\n📌 **Module 4 – Overloading, Templates, and Inheritance (8 hrs)**\n- Operator and function overloading\n- Function and class templates\n- Single and multiple inheritance\n- Virtual base classes, abstract classes\n- Pointers with inheritance, member function overloading\n\n📌 **Module 5 – Pointers, Arrays, and Exception Handling (11 hrs)**\n- Void pointers, pointers to classes and objects\n- Arrays in C++\n- Exception handling: try, throw, catch\n- Custom exception classes\n- Error handling techniques: terminate, fix, log & continue\n- Stack unwinding\n\n📘 **Suggested Books:**\n1. *Thinking in C++* (Vol. 1 & 2) – Bruce Eckel, Chuck Allison (Pearson)\n2. *Mastering C++* – Venugopal (Tata McGraw Hill)\n3. *Object Oriented Programming with C++* – E. Balaguruswamy (Tata McGraw Hill)\n4. *Starting Out with OOP in C++* – Tony Gaddis (Wiley India)\n\n📘 **Reference Books:**\n1. *The C++ Programming Language* – Bjarne Stroustrup (Pearson)\n2. *C++: How to Program* – Deitel & Deitel (Pearson)\n3. *Big C++* – Cay Horstmann (Wiley India)\n4. *C++ Primer* – Stanley B. Lippmann, Josee Lajoie (Pearson)\n5. *C++ and OOP Paradigm* – Debasish Jana (PHI)\n6. *Programming with C++* – Ravichandran (Tata McGraw Hill)\n7. *C++ Programming Black Book* – Steven Holzner (Dreamtech Press)\n\n🎓 **Course Outcomes:**\n1️⃣ Understand the concepts of class, object, inheritance, and polymorphism.\n2️⃣ Apply operator overloading in C++.\n3️⃣ Differentiate between function overloading and overriding.\n4️⃣ Implement exception handling in OOP.\n5️⃣ Utilize template classes.\n6️⃣ Write object-oriented programs of moderate complexity in C++."
},
"Technical Writing": {
  "type": "text",
  "text": "📘 Subject: Technical Writing\n📗 Course Code: N/A (Not provided)\n🧮 Credits: 3 (3L:0T:0P)\n\n🎯 **Course Objectives:**\n1️⃣ Understand the structure and types of technical documents.\n2️⃣ Communicate technical content clearly, accurately, and effectively in written form.\n3️⃣ Recognize and apply verbal and technical elements of scientific and technical communication.\n4️⃣ Work collaboratively and independently to research, analyze, and write on science and technology topics.\n\n📚 **Detailed Modules:**\n\n📌 **Module 1 – Introduction (10 hrs)**\n- Fundamentals of Technical Writing\n- Importance of clarity and conciseness\n- Attributes, types, and benefits of technical writing\n- Understanding audiences: technical, managerial, and general\n- Grammar essentials: nouns, pronouns, verbs, adjectives, adverbs, tenses, punctuation\n\n📌 **Module 2 – Performing Technical Studies (10 hrs)**\n- Types and methodology of technical studies\n- Project proposal, background info, test plans, experiments, result reporting\n- Writing strategy: reader analysis, scope, purpose\n- Document options and hierarchy\n- Criteria for good writing: content, presentation, language\n- Style elements and effective illustrations\n\n📌 **Module 3 – Formal and Informal Reports (10 hrs)**\n- Formal Reports: outline, title, intro, procedure, discussion, results, conclusion, abstract, back matter\n- Informal Reports: elements, investigation reports, action letters, service work, proposals, memo reports\n\n📌 **Module 4 – Review, Editing, and Presentations (10 hrs)**\n- Review and editing: types, methodology, examples\n- Oral presentations: types, preparation, visual aids\n- Impediments to writing and skill maintenance\n- Measuring report effectiveness\n\n📘 **Suggested Books:**\n1. *Engineers' Guide to Technical Writing* – Kenneth G. Budinski (ASM International)\n2. *Handbook for Technical Writing* – James H. Shelton (NTC Contemporary Press)\n3. *The Technical Writer's Handbook* – Matt Young (University Science Books)\n\n📘 **Reference Books:**\n1. *A Guide to Technical Writing* – T. A. Rickard (Franklin Classics)\n2. *Technical Writing* – S. Jayprakash (Himalaya Publishing House)\n3. *Technical Writing* – O. N. Pandey\n\n🎓 **Course Outcomes:**\n1️⃣ Demonstrate improved written English (grammar, structure, document design).\n2️⃣ Practice planning, drafting, revising, and editing in professional writing.\n3️⃣ Determine and apply appropriate methods for technical tasks.\n4️⃣ Use sources ethically and apply proper citation conventions for each genre."
},
"Mathematics-III (Differential Calculus)": {
  "type": "text",
  "text": "📘 Subject: Mathematics-III (Differential Calculus)\n📗 Course Code: N/A (Not provided)\n🧮 Credits: 2 (2L:0T:0P)\n\n📚 **Detailed Modules:**\n\n📌 **Module 1 – Single Variable Calculus (6 hrs)**\n- Successive differentiation\n- Leibnitz’s Theorem\n- Limit, continuity, and differentiability of functions of one variable\n\n📌 **Module 2 – Multivariable Calculus (8 hrs)**\n- Limit, continuity, and differentiability of multivariable functions\n- Partial derivatives and Euler’s Theorem for homogeneous functions\n- Total derivatives and change of variables\n- Maxima and minima of multivariable functions\n- Lagrange multipliers method\n- Taylor’s and Maclaurin’s theorem with remainder for several variables\n\n📌 **Module 3 – Vector Calculus (8 hrs)**\n- Gradient, divergence, curl and their physical interpretations\n- Vector identities and directional derivatives\n- Line, surface, and volume integrals\n- Applications of Green’s, Stokes’, and Gauss’ Divergence Theorem (without proof)\n\n📌 **Module 4 – First Order Differential Equations (6 hrs)**\n- Exact, linear, and Bernoulli’s equations\n- Euler’s equations\n- Non-first degree equations: solvable for P, Y, X and Clairaut’s type\n\n📌 **Module 5 – Higher Order ODEs (8 hrs)**\n- Second order linear differential equations with variable coefficients\n- Method of variation of parameters\n- Cauchy-Euler equations\n- Power series solutions\n- Legendre polynomials and Bessel functions of the first kind with properties\n\n📌 **Module 6 – First Order Partial Differential Equations (6 hrs)**\n- First order PDEs (linear and non-linear)\n- Solution techniques for first order PDEs\n\n🎓 **Course Outcomes:**\n1️⃣ Understand and apply differentiation techniques for single and multivariable functions.\n2️⃣ Use vector calculus tools for physical interpretations and integral theorems.\n3️⃣ Solve ordinary and partial differential equations including special functions (Legendre, Bessel).\n4️⃣ Apply Lagrange multipliers and Taylor expansions in optimization problems.\n5️⃣ Analyze and interpret gradient, divergence, and curl with applications."
}



}